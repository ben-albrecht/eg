# Simplest Form:

Regex       Matches
foo         foo


# Quantifiers
* matches any number of what's before it, from zero to infinity. 
? matches zero or one.
+ matches one or more.

Regex   Matches
23*4    1245, 12345, 123345
23?4    1245, 12345
23+4    12345, 123345


# Special Characters

.   The dot matches any single character.
\n  Matches a newline character (or CR+LF combination).
\t  Matches a tab (ASCII 9).
\d  Matches a digit [0-9].
\D  Matches a non-digit.
\w  Matches an alphanumberic character.
\W  Matches a non-alphanumberic character.
\s  Matches a whitespace character.
\S  Matches a non-whitespace character.
\   Use \ to escape special characters. For example, \. matches a dot, and \\ matches a backslash.
^   Match at the beginning of the input string.
$   Match at the end of the input string.


# Characters

[abc]   Match any of a, b, and c.
[a-z]   Match any character between a and z. (ASCII order)
[^abc]  A caret ^ at the beginning indicates "not".
        In this case, match anything other than a, b, or c.
[+*?.]  Most special characters have no meaning inside the square brackets.
        This expression matches any of +, *, ? or the dot.


Regex               Matches                 Does not match
[^ab]               c, d, z                 ab
^[1-9][0-9]*$       Any positive integer    Zero, negative or decimal numbers
[0-9]*[,.]?[0-9]+   .1, 1, 1.2, 100,000     12.
